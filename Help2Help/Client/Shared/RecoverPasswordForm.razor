@inject IAuthService AuthService
@inject IMailingService MailingService
@inject NavigationManager NavigationManager

<MudPaper Height="auto" Width="100%"  Class="pt-2" Elevation="0">
    <MudContainer MaxWidth="MaxWidth.Small">
             <MudGrid>
            <MudItem>
                <MudCard Style="width:100%;" Outlined="true" Class="pb-10 pt-10 pr-10 pl-10 ma-auto">
                    <EditForm Model="user" OnValidSubmit="Send">
                        <DataAnnotationsValidator />
                        <MudText Typo="Typo.h5" Align="Align.Center">
                            <b>RECUPERO DE CUENTA</b>
                        </MudText>
                        <MudCardContent>
                            <MudTextField Label="Ingrese su email" Class="mt-3"
                                          @bind-Value="user.Email" />
                            <ValidationMessage For="@(() => user.Email)" />
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit"
                                       Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       Class="ma-auto pr-16 pl-16">
                                Enviar correo
                            </MudButton>
                        </MudCardActions>
                    </EditForm>
                    <div hidden="@HideAlert">
                    @if (!String.IsNullOrEmpty(mailResponse.ToString()))
                    {
                        @if (!(mailResponse.Message == "Mail enviado!"))
                        {
                            <MudAlert Severity="Severity.Error">@mailResponse.Message</MudAlert>
                        }
                    }
                    </div>
                    <div hidden="@HideMessage">
                        <MudText Typo="Typo.body2">Se ha enviado un correo a su dirección de mail. Resvise su casilla de SPAM o correo no deseado.</MudText>
                        <EditForm Model="code" OnValidSubmit="ValidateCode">
                            <DataAnnotationsValidator />
                            <MudCardContent>
                               <MudText Align="Align.Center" Typo="Typo.body2">
                                <b>
                                    Ingrese su código de 6 dígitos a continuación
                                </b>
                            </MudText>
                            <MudPaper Class="gap-x-0 d-flex flex-wrap" MaxWidth="auto" Elevation="0">
                                <MudTextField Class="d-inline mt-3"
                                              MaxLength="1"
                                              Mask="@(new PatternMask("0"))"
                                              Adornment="Adornment.Start"
                                              DisableUnderLine="true"
                                              Style="@($"background:{Colors.Grey.Lighten2};width:38px;height:40px;border-radius:8px;")"
                                              @bind-Value="FirstNumber" />
                                <MudTextField Class="d-inline mt-3"
                                              MaxLength="1"
                                              Mask="@(new PatternMask("0"))"
                                              Adornment="Adornment.Start"
                                              DisableUnderLine="true"
                                              Style="@($"background:{Colors.Grey.Lighten2};width:38px;height:40px;border-radius:8px;")"
                                              @bind-Value="SecondNumber" />
                                <MudTextField Class="d-inline mt-3"
                                              MaxLength="1"
                                              Mask="@(new PatternMask("0"))"
                                              Adornment="Adornment.Start"
                                              DisableUnderLine="true"
                                              Style="@($"background:{Colors.Grey.Lighten2};width:38px;height:40px;border-radius:8px;")"
                                              @bind-Value="ThirdNumber" />
                                <MudTextField Class="d-inline mt-3"
                                              MaxLength="1"
                                              Mask="@(new PatternMask("0"))"
                                              Adornment="Adornment.Start"
                                              DisableUnderLine="true"
                                              Style="@($"background:{Colors.Grey.Lighten2};width:38px;height:40px;border-radius:8px;")"
                                              @bind-Value="FourthNumber" />
                                <MudTextField Class="d-inline mt-3"
                                              MaxLength="1"
                                              Mask="@(new PatternMask("0"))"
                                              Adornment="Adornment.Start"
                                              DisableUnderLine="true"
                                              Style="@($"background:{Colors.Grey.Lighten2};width:38px;height:40px;border-radius:8px;")"
                                              @bind-Value="FifthNumber" />
                                <MudTextField Class="d-inline mt-3"
                                              MaxLength="1"
                                              Mask="@(new PatternMask("0"))"
                                              Adornment="Adornment.Start"
                                              DisableUnderLine="true"
                                              Style="@($"background:{Colors.Grey.Lighten2};width:38px;height:40px;border-radius:8px;")"
                                              @bind-Value="SixthNumber" />
                            </MudPaper>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton ButtonType="ButtonType.Submit"
                                           Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           Class="ma-auto pl-16 pr-16">
                                    Enviar código
                                </MudButton>
                            </MudCardActions>
                        </EditForm>
                    <div hidden="@HideAlert2">
                    @if (!String.IsNullOrEmpty(message.ToString()))
                    {
                        <MudAlert Severity="Severity.Error">@message</MudAlert>
                    }
                    </div>
                    </div>
                    <div hidden="@HideLabel">
                        <EditForm Model="request" OnValidSubmit="ChangePassword">
                            <MudCardContent>
                               <MudTextField  @bind-Value="request.Password" 
                               Label="Nueva contraseña" 
                               Variant="Variant.Outlined" 
                               InputType="@PasswordInput" 
                               Adornment="Adornment.End" 
                               AdornmentIcon="@PasswordInputIcon" 
                               OnAdornmentClick="ButtonTestclick" 
                               AdornmentAriaLabel="Show Password" />
                              
                                <MudTextField  @bind-Value="request.ConfirmPassword" 
                                Label="Repetir contraseña" 
                                Variant="Variant.Outlined" 
                                InputType="@PasswordInput2" 
                                Adornment="Adornment.End" 
                                AdornmentIcon="@PasswordInputIcon2" 
                                OnAdornmentClick="ButtonTestclick2" 
                                AdornmentAriaLabel="Show Password" />
                                
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton ButtonType="ButtonType.Submit"
                                           Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           Class="ma-auto pl-16 pr-16">
                                    Cambiar contraseña
                                </MudButton>
                            </MudCardActions>
                        </EditForm>
                        @messageNewPass
                    </div>
                </MudCard>
            </MudItem>
        </MudGrid>

    </MudContainer>
</MudPaper>


@code {
    User user = new User();
    UserChangePassword request = new UserChangePassword();
    ServiceResponse<string> mailResponse = new ServiceResponse<string>();
    string message = string.Empty;
    string messageNewPass = string.Empty;
    string code = string.Empty;
    string FirstNumber = string.Empty;
    string SecondNumber = string.Empty;
    string ThirdNumber = string.Empty;
    string FourthNumber = string.Empty;
    string FifthNumber = string.Empty;
    string SixthNumber = string.Empty;
    private bool HideLabel { get; set; } = true;
    private bool HideMessage { get; set; } = true;
    private bool HideAlert { get; set; } = true;
    private bool HideAlert2 { get; set; } = true;

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    bool isShow2;
    InputType PasswordInput2 = InputType.Password;
    string PasswordInputIcon2 = Icons.Material.Filled.VisibilityOff;

    protected override void OnInitialized() => AuthService.DeleteCookie();

    private async Task Send()
    {
        mailResponse = await MailingService.SendMail(user.Email);
        if (mailResponse.Success && mailResponse.Message == "Mail enviado!") ShowMessage();
        else ShowAlert();
    }

    private void Toggle(int option)
    {
        if(option == 1) 
        {
            if(!HideAlert2) HideAlert2 = true;
            HideLabel = !HideLabel;
        }
        if(option == 2) HideAlert2 = !HideAlert2;
    }
    private void ShowMessage() => HideMessage = !HideMessage;
    private void ShowAlert() => HideAlert = !HideAlert;
    private void ShowAlert2() => HideAlert2 = !HideAlert2;

    private async Task ValidateCode()
    {
        code = FirstNumber + SecondNumber + ThirdNumber + FourthNumber + FifthNumber + SixthNumber;
        var result = await AuthService.ValidateCode(code);

        if (result) Toggle(1);
        else 
        {
            message = "Código incorrecto";
            Toggle(2);
        }
    }

    private async Task ChangePassword()
    {
        request.Email = user.Email;
        var result = await AuthService.ChangePassword(request);
        messageNewPass = result.Message;
        await Task.Delay(2000);
        NavigationManager.NavigateTo("/");
    }

    void ButtonTestclick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    void ButtonTestclick2()
    {
        @if (isShow2)
        {
            isShow2 = false;
            PasswordInputIcon2 = Icons.Material.Filled.VisibilityOff;
            PasswordInput2 = InputType.Password;
        }
        else {
            isShow2 = true;
            PasswordInputIcon2 = Icons.Material.Filled.Visibility;
            PasswordInput2 = InputType.Text;
        }
    }

}