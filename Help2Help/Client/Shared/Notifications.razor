@inject INotificationService NotificationService

<MudBadge Origin="Origin.TopRight" Class="mr-4" Content="@NotificationsCount" Color="Color.Warning" Overlap="true" Bordered="true">
    <!-- Vista Web -->
    <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
        <MudMenu DisableRipple="true"
                 Icon="@Icons.Material.Filled.Notifications"
                 AnchorOrigin="Origin.BottomLeft"
                 TransformOrigin="Origin.TopRight"
                 Dense="true"
                 MaxHeight="400"
                 Size="Size.Medium"
                 Color="Color.Default">
            @if (notifications.Count() > 0)
            {
                @foreach (var (notification, index) in notifications.Select((notification, index) => (notification, index)))
                {
                    <MudMenuItem Href="profile">
                        <MudText Typo="Typo.subtitle2">@notification.Message</MudText>
                    </MudMenuItem>
                    @if ((index + 1) < notifications.Count())
                    {
                        <MudDivider DividerType="DividerType.Middle" Light="true" />
                    }
                }
            }
            else
            {
                <MudMenuItem>
                    <MudText Typo="Typo.subtitle2">No posee notificaciones</MudText>
                </MudMenuItem>
            }
        </MudMenu>
    </MudHidden>
    <!-- Vista Mobile -->
    <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
        <MudMenu DisableRipple="true"
                 Icon="@Icons.Material.Filled.Notifications"
                 AnchorOrigin="Origin.BottomRight"
                 TransformOrigin="Origin.TopRight"
                 Dense="true"
                 MaxHeight="400"
                 Size="Size.Medium"
                 Color="Color.Default">
            @if (notifications.Count() > 0)
            {
                @foreach (var (notification, index) in notifications.Select((notification, index) => (notification, index)))
                {
                    <MudMenuItem Style="width:70vw" Href="profile">
                        <MudText Typo="Typo.subtitle2">@notification.Message</MudText>
                    </MudMenuItem>
                    @if ((index + 1) < notifications.Count())
                    {
                        <MudDivider DividerType="DividerType.Middle" Light="true" />
                    }
                }
            }
            else
            {
                <MudMenuItem Style="width:70vw">
                    <MudText Typo="Typo.subtitle2">No posee notificaciones</MudText>
                </MudMenuItem>
            }
        </MudMenu>
    </MudHidden>
</MudBadge>


@code {

    public int? NotificationsCount { get; set; }
    public int? DividerCount { get; set; }

    List<NotificationResponseDto> notifications = new List<NotificationResponseDto>();


    protected override async Task OnInitializedAsync()
    {
        await NotificationService.AddDeadlineEventNotification();

        notifications = (await NotificationService.GetNotifications());

        NotificationsCount = notifications.Count();

        await InvokeAsync(() => { StateHasChanged(); });
    }
}