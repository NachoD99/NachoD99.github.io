@page "/support"
@inject IMailingService MailingService
@inject ISnackbar Snackbar

<style>
    body {
        margin: 0;
        padding: 0;
    }
</style>

<MudLayout>
    <CustomNavMenu></CustomNavMenu>
    <MudMainContent>
        <!--VISTA MOBILE-->
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudPaper Class="px-8 pt-4" Elevation="0">
                <h1 style="font-size: 20px;text-align: center;">
                    <span style="color: black;">Soporte</span>
                </h1>
            </MudPaper>
        </MudHidden>
        <!--VISTA WEB-->
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudPaper Class="px-8 pt-4" Elevation="0">
                <h1 style="font-size: 48px;text-align: center;">
                    <span style="color: black;">Soporte</span>
                </h1>
            </MudPaper>
        </MudHidden>
        <MudTextField T="string" Class="ma-3" Placeholder="Escriba su consulta para ser enviada a la casilla de soporte"
                      Variant="Variant.Outlined" @bind-Value="@message" Lines="10" />
        <MudButton ButtonType="ButtonType.Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="Send"
                   Class="mr-auto mt-4 ml-3">
            Enviar consulta
        </MudButton>


         <!--VISTA MOBILE-->
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudPaper Class="px-8 pt-4" Elevation="0">
                <h1 style="font-size: 20px;text-align: center;">
                    <span style="color: black;">Encuentranos en</span>
                </h1>
            </MudPaper>
        </MudHidden>
        <!--VISTA WEB-->
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudPaper Class="px-8 pt-4" Elevation="0">
                <h1 style="font-size: 48px;text-align: center;">
                    <span style="color: black;">Encuentranos en</span>
                </h1>
            </MudPaper>
        </MudHidden>

        <MudStack Row="true" Class="mt-4 mb-4 gap-8 d-flex justify-center">
            <MudIconButton Icon="@Icons.Material.Filled.Email"
                           Style="@($"background:#25d366;color:#FFF;")"
                           Target="_blank"
                           Size="Size.Large"
                           Href="mailto:helptohelp22@gmail.com"
                           aria-label="share"></MudIconButton>

            <MudIconButton Icon="@Icons.Custom.Brands.Facebook"
                           Style="@($"background:#3b5998;color:#FFF;")"
                           Target="_blank"
                           Size="Size.Large"
                           Href="#"
                           aria-label="share"></MudIconButton>

            <MudIconButton Icon="@Icons.Custom.Brands.Instagram"
                           Style="@($"background:radial-gradient(circle farthest-corner at 28% 100%, #fcdf8f 0%, #fbd377 10%, #fa8e37 22%,  #f73344 35%, transparent 65%), linear-gradient(145deg, #3051f1 10%, #c92bb7 70%);color:#FFF;")"
                           Target="_blank"
                           Size="Size.Large"
                           Href="#"
                           aria-label="share"></MudIconButton>
        </MudStack>
    </MudMainContent>
</MudLayout>

@code {
    string message = string.Empty;
    ServiceResponse<string> mailResponse = new ServiceResponse<string>();

    private async Task Send()
    {
        if (message != string.Empty)
        {
            mailResponse = await MailingService.SendSupportQuestion(message);

            if (mailResponse.Message == "true")
            {
                Snackbar.Add(mailResponse.Data, Severity.Success);
                await InvokeAsync(() => { StateHasChanged(); });
            }
            else
            {
                Snackbar.Add(mailResponse.Data, Severity.Error);
            }
            message = string.Empty;
        }
    }
}
